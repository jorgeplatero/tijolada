Vendas

CREATE TABLE venda (
    ID_venda SERIAL PRIMARY KEY,
	data_venda TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    cliente_ID_cliente INTEGER REFERENCES cliente (ID_cliente) ON UPDATE CASCADE,
    endereco_entrega_venda VARCHAR(100),
    bairro_entrega_venda VARCHAR(50),
    observacoes_venda VARCHAR(255),
    preco_total_venda DECIMAL,
    situacao_pagamento_venda VARCHAR(50),
    situacao_entrega_venda VARCHAR(50),
    forma_pagamento_venda VARCHAR(50)
);

Crie inserts postgresql para a tabela acima. Considere que o campo cliente_ID_cliente deve ser necessariamente preenchido com um valor entre 1 e 20. 
O campo situacao_pagamento_venda deve ser preenchido com o valor 'Não realizado' ou com o valor 'Realizado'. O campo  situacao_entrega_venda deve ser preenchido  
com o valor 'Não realizada' ou com o valor 'Realizada' e o campo forma_pagamento_venda deve ser preenchido com um dos valores a seguir: 'Crédito', 'Débito', 
'Dinheiro', 'PIX'. Desconsidere o campo preco_total_venda e considere que o campo observacoes_venda deve ser preenchido com detalhes de entrega, como a quem chamar 
para receber o produto ou outro fato que seja importante para a entrega. O campo data_venda deve conter valores para o ano de 2023 com meses e dias diferentes. Faça 40 linhas.

CREATE TABLE venda_produto (
    ID_venda_produto SERIAL PRIMARY KEY,
    venda_ID_venda INTEGER REFERENCES venda (ID_venda) ON UPDATE CASCADE,
    produto_ID_produto INTEGER REFERENCES produto (ID_produto) ON UPDATE CASCADE,
    preco_unitario_produto_venda DECIMAL,
    quantidade_produto_venda REAL NOT NULL
);

Crie inserts postgresql para a tabela acima. Considere que o campo venda_ID_venda deve ser necessariamente preenchido com um valor entre 1 e 40. O campo produto_ID_produto 
deve ser necessariamente preenchido com um valor entre 1 e 68. O campo quantidade_produto_venda deve ser deve ser necessariamente preenchido com um valor entre 1 e 10. 

Compras

CREATE TABLE compra (
    ID_compra SERIAL PRIMARY KEY,
    data_compra TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    fornecedor_ID_fornecedor INTEGER REFERENCES fornecedor (ID_fornecedor) ON UPDATE CASCADE,
    preco_total_compra DECIMAL,
    situacao_pagamento_compra VARCHAR(50),
    situacao_entrega_compra VARCHAR(50),
    forma_pagamento_compra VARCHAR(50)
);

Crie inserts postgresql para a tabela acima. Considere que o campo fornecedor_ID_fornecedor deve ser necessariamente preenchido com um valor entre 1 e 12. 
O campo situacao_pagamento_compra deve ser preenchido com o valor 'Não realizado' ou com o valor 'Realizado'. O campo  situacao_entrega_compra deve ser preenchido  
com o valor 'Não realizada' ou com o valor 'Realizada' e o campo forma_pagamento_venda deve ser preenchido com um dos valores a seguir: 'Crédito', 'Débito', 
'Dinheiro', 'PIX'. Desconsidere o campo preco_total_compra. O campo data_venda deve conter valores para o ano de 2023 com meses e dias diferentes. Faça 24 linhas.

CREATE TABLE compra_produto (
    ID_compra_produto SERIAL PRIMARY KEY,
    compra_ID_compra INTEGER REFERENCES compra (ID_compra) ON UPDATE CASCADE,
    produto_ID_produto INTEGER REFERENCES produto (ID_produto) ON UPDATE CASCADE,
    preco_unitario_produto_compra DECIMAL NOT NULL,
    quantidade_produto_compra REAL NOT NULL
);

Crie inserts postgresql para a tabela acima. Considere que o campo compra_ID_compra deve ser necessariamente preenchido com um valor entre 1 e 24. O campo produto_ID_produto 
deve ser necessariamente preenchido com um valor entre 1 e 68. O campo quantidade_produto_compra deve ser deve ser necessariamente preenchido com um valor entre 60 e 200.
